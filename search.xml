<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>webpack：可替换模板字符串[name]/[id]/...等变量名释义</title>
      <link href="/2020/08/29/webpack-temp-string/"/>
      <url>/2020/08/29/webpack-temp-string/</url>
      
        <content type="html"><![CDATA[<h3 id="webpack【可替换模板字符串】"><a href="#webpack【可替换模板字符串】" class="headerlink" title="webpack【可替换模板字符串】"></a>webpack【<strong>可替换模板字符串</strong>】</h3><h4 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h4><p>在webpack中，常遇到[name]/[hash]/[id]等占位符，这些占位符多是用来解决<strong>多个入口起点</strong>(entry point)、<strong>代码拆分</strong>(code splitting)或各种插件(plugin)创建<strong>多个 bundle</strong>时的名称或者lib。</p><p>webpack中通过内置的<a href="https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js">TemplatedPathPlugin</a>实现了占位符的替换处理工作。</p><h4 id="二、名词解析"><a href="#二、名词解析" class="headerlink" title="二、名词解析"></a>二、名词解析</h4><h5 id="1-name"><a href="#1-name" class="headerlink" title="1.[name]"></a>1.[name]</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    entry: &#123; <span class="attr">index</span>: <span class="string">&quot;./index.js&quot;</span> &#125;,</span><br><span class="line">    output: &#123; <span class="attr">filename</span>: <span class="string">&quot;[name].bundle.js&quot;</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[name]一般指的是entry入口定义的输入文件key值，例如此处为index。</p><p>多个入口key分别对应各自的[name]。</p><h5 id="2-id"><a href="#2-id" class="headerlink" title="2.[id]"></a>2.[id]</h5><p>模块标识符(module identifier)。</p><p>id一般用于动态加载模块时，一次构建后，动态加载模块生成的id 。</p><h5 id="3-hash"><a href="#3-hash" class="headerlink" title="3.[hash]"></a>3.[hash]</h5><p>模块标识符(module identifier)的 hash。</p><p>hash是有webpack是一次构建打包生成的hash。</p><h5 id="4-chunkhash"><a href="#4-chunkhash" class="headerlink" title="4.[chunkhash]"></a>4.[chunkhash]</h5><p>根据入口的每一个chunk的内容，生成独有的一份hash。webpack以js为入口，每一个入口通过配置合理的插件可以差分多个文件，例如剥离CSS等，但这些资源文件都归属一个chunk。</p><p>一旦chunk内容发生（可以理解为入口文件未做剥离前的文件构成发生改变），该chunk的hash就会发生变化。</p><h5 id="5-contenthash"><a href="#5-contenthash" class="headerlink" title="5.[contenthash]"></a>5.[contenthash]</h5><p>文件内容 hash，<strong>每个资源</strong>生成的 hash 都是不同的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>search</title>
      <link href="/2020/08/06/search/"/>
      <url>/2020/08/06/search/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2020/08/05/test/"/>
      <url>/2020/08/05/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
